# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: cookstore cicd

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/cookstore-backend

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        PROFILE: ${{ secrets.PROFILE }}
        WEB_PORT: ${{ secrets.WEB_PORT }}
        JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      run: mvn clean install

  push_to_registry:
    needs: [build]
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run:
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t=${{ env.IMAGE_NAME }} .
          docker push ${{ env.IMAGE_NAME }}
  deploy:
    needs: [push_to_registry]
    name: deploy to ec2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Deploy to EC2 instance
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{secrets.SSH_USER_NAME}}
          TARGET: ${{secrets.EC2_DIRECTORY}}/cookstore-backend
          EXCLUDE: ".git, .github, .gitignore"
          SCRIPT_BEFORE: |
            cd /${{secrets.EC2_DIRECTORY}}
            rm -rf cookstore-backend

 
          

  
